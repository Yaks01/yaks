// Generated by CoffeeScript 1.9.1
(function() {
  var Storage, canUseDOM;

  canUseDOM = require('./canUseDOM.js');

  Storage = (function() {
    var STORAGE, STORAGE_TESTED, _checkStorage, _testStorage;

    function Storage() {}

    STORAGE = true;

    STORAGE_TESTED = false;

    _checkStorage = function() {
      if (STORAGE_TESTED) {
        return STORAGE;
      } else {
        return _testStorage();
      }
    };

    _testStorage = function() {
      var e;
      STORAGE_TESTED = true;
      if (typeof (window.Storage != null)) {
        try {
          window.localStorage.setItem('teststorage', 1);
          window.localStorage.removeItem('teststorage');
          return STORAGE = true;
        } catch (_error) {
          e = _error;
          return STORAGE = false;
        }
      } else {
        return STORAGE = false;
      }
    };

    Storage.prototype.setLocal = function(name, value) {
      if (_checkStorage()) {
        return window.localStorage.setItem(name, JSON.stringify(value));
      }
    };

    Storage.prototype.setSession = function(name, value) {
      if (_checkStorage()) {
        return window.sessionStorage.setItem(name, JSON.stringify(value));
      }
    };

    Storage.prototype.setCookie = function(name, value, end, path, domain, secure) {
      var sExpires;
      if (!canUseDOM) {
        return null;
      }
      if (!name || /^(?:expires|max\-age|path|domain|secure)$/i.test(name)) {
        return false;
      }
      sExpires = '';
      if (end) {
        switch (end.constructor) {
          case Number:
            sExpires = end === Infinity ? '; expires=Fri, 31 Dec 9999 23:59:59 GMT' : '; max-age=' + end;
            break;
          case String:
            sExpires = '; expires=' + end;
            break;
          case Date:
            sExpires = '; expires=' + end.toUTCString();
        }
      }
      document.cookie = encodeURIComponent(name) + '=' + encodeURIComponent(value) + sExpires + (domain ? '; domain=' + domain : '') + (path ? '; path=' + path : '') + (secure ? '; secure' : '');
      return true;
    };

    Storage.prototype.getLocal = function(name) {
      if (_checkStorage()) {
        return JSON.parse(window.localStorage.getItem(name));
      }
    };

    Storage.prototype.getSession = function(name) {
      if (_checkStorage()) {
        return JSON.parse(window.sessionStorage.getItem(name));
      }
    };

    Storage.prototype.getCookie = function(name) {
      if (!canUseDOM) {
        return null;
      }
      return decodeURIComponent(document.cookie.replace(new RegExp('(?:(?:^|.*;)\\s*' + encodeURIComponent(name).replace(/[\-\.\+\*]/g, '\\$&') + '\\s*\\=\\s*([^;]*).*$)|^.*$'), '$1')) || null;
    };

    Storage.prototype.removeLocal = function(name) {
      if (_checkStorage()) {
        return window.localStorage.removeItem(name);
      }
    };

    Storage.prototype.removeSession = function(name) {
      if (_checkStorage()) {
        return window.sessionStorage.removeItem(name);
      }
    };

    Storage.prototype.removeCookie = function(name, path, domain) {
      if (!canUseDOM) {
        return null;
      }
      if (!name || this.getCookie(name) === null) {
        return false;
      }
      document.cookie = encodeURIComponent(name) + '=; expires=Thu, 01 Jan 1970 00:00:00 GMT' + (domain ? '; domain=' + domain : '') + (path ? '; path=' + path : '');
      return true;
    };

    return Storage;

  })();

  module.exports = new Storage();

}).call(this);
